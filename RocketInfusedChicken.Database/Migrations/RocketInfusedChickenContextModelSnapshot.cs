// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RocketInfusedChicken.Database;

namespace RocketInfusedChicken.Database.Migrations
{
    [DbContext(typeof(RocketInfusedChickenContext))]
    partial class RocketInfusedChickenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RocketInfusedChicken.Database.Model.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MultiverseId");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new { Id = 1, MultiverseId = 1000, Name = "Alex Rocks" },
                        new { Id = 2, MultiverseId = 666, Name = "Sammer Smells" }
                    );
                });

            modelBuilder.Entity("RocketInfusedChicken.Database.Model.Draft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SetId");

                    b.HasKey("Id");

                    b.ToTable("Drafts");
                });

            modelBuilder.Entity("RocketInfusedChicken.Database.Model.DraftPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DraftId");

                    b.Property<int>("PlayerId");

                    b.HasKey("Id");

                    b.ToTable("DraftPlayers");
                });

            modelBuilder.Entity("RocketInfusedChicken.Database.Model.Pack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DraftId");

                    b.Property<int>("SetId");

                    b.HasKey("Id");

                    b.ToTable("Packs");
                });

            modelBuilder.Entity("RocketInfusedChicken.Database.Model.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("RocketInfusedChicken.Database.Model.Printing", b =>
                {
                    b.Property<int>("CardId");

                    b.Property<int>("SetId");

                    b.HasKey("CardId", "SetId");

                    b.HasIndex("SetId");

                    b.ToTable("Printings");

                    b.HasData(
                        new { CardId = 1, SetId = 33 },
                        new { CardId = 2, SetId = 33 },
                        new { CardId = 1, SetId = 51 }
                    );
                });

            modelBuilder.Entity("RocketInfusedChicken.Database.Model.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.Property<DateTime>("ReleaseDate");

                    b.HasKey("Id");

                    b.ToTable("Sets");

                    b.HasData(
                        new { Id = 33, Code = "GOS", Name = "Guilds of Shropshire", ReleaseDate = new DateTime(2018, 11, 20, 22, 24, 30, 586, DateTimeKind.Local) },
                        new { Id = 51, Code = "INS", Name = "Innastruggle", ReleaseDate = new DateTime(2017, 4, 20, 22, 24, 30, 587, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("RocketInfusedChicken.Database.Model.Printing", b =>
                {
                    b.HasOne("RocketInfusedChicken.Database.Model.Card", "Card")
                        .WithMany("Printings")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RocketInfusedChicken.Database.Model.Set", "Set")
                        .WithMany("Printings")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
